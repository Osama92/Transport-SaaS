/**
 * Amana - Language-Aware Responses
 * Matches user's language for natural conversation flow
 */

export type Language = 'en' | 'pidgin' | 'ha' | 'ig' | 'yo';

/**
 * Response templates in different Nigerian languages
 */
export const responses = {
  // Working on it...
  working: {
    en: "‚è≥ Working on it...",
    pidgin: "‚è≥ I dey work on am...",
    ha: "‚è≥ Ina aiki...",
    ig: "‚è≥ Ana m ar·ª• ·ªçr·ª•...",
    yo: "‚è≥ Mo n ·π£i·π£·∫π lori r·∫π..."
  },

  // Client not found
  clientNotFound: {
    en: (name: string) => `Client "${name}" not found in your records.\n\nWould you like to add them?`,
    pidgin: (name: string) => `I no see "${name}" for your client list o.\n\nYou wan add am?`,
    ha: (name: string) => `Ba mu sami "${name}" a cikin bayanan ku ba.\n\nKuna so ku ∆ôara su?`,
    ig: (name: string) => `Ah·ª•gh·ªã m "${name}" n'ime ndek·ªç g·ªã.\n\n·ªä ch·ªçr·ªç itinye ha?`,
    yo: (name: string) => `Mi o ri "${name}" ninu aw·ªçn onibara r·∫π.\n\n·π¢e o f·∫π fi w·ªçn kun?`
  },

  // Adding client - ask for contact person
  askContactPerson: {
    en: "üë§ Who is the contact person at this company?\n\nüí° _Or type 'skip' if not applicable_",
    pidgin: "üë§ Wetin be the name of person wey we go dey contact for this company?\n\nüí° _Or type 'skip' if e no apply_",
    ha: "üë§ Wane ne sunan mai tuntu…ìar wannan kamfani?\n\nüí° _Ko rubuta 'skip' idan ba ya shafa_",
    ig: "üë§ Ked·ª• aha onye ga-akp·ªçt·ª•r·ª• na ·ª•l·ªç ·ªçr·ª• a?\n\nüí° _Ma ·ªç b·ª• dee 'skip' ma ·ªç b·ª•r·ª• na ·ªç d·ªãgh·ªã mkpa_",
    yo: "üë§ Tani oruk·ªç ·∫πni ti a yoo kan si ni ile-i·π£·∫π yii?\n\nüí° _Tabi k·ªç 'skip' ti ko ba wulo_"
  },

  // Ask for email
  askEmail: {
    en: "üìß What's their email address?\n\nüí° _Or type 'skip' to continue_",
    pidgin: "üìß Wetin be their email address?\n\nüí° _Or type 'skip' make we continue_",
    ha: "üìß Menene adireshin imel …óin su?\n\nüí° _Ko rubuta 'skip' don ci gaba_",
    ig: "üìß Ked·ª• adrees·ªã email ha?\n\nüí° _Ma ·ªç b·ª• dee 'skip' ka any·ªã gaa n'ihu_",
    yo: "üìß Kini adir·∫πsi imeeli w·ªçn?\n\nüí° _Tabi k·ªç 'skip' lati t·∫πsiwaju_"
  },

  // Ask for phone
  askPhone: {
    en: "üì± What's their phone number?\n\nüí° _Or type 'skip' to continue_",
    pidgin: "üì± Wetin be their phone number?\n\nüí° _Or type 'skip' make we continue_",
    ha: "üì± Menene lambar wayar su?\n\nüí° _Ko rubuta 'skip' don ci gaba_",
    ig: "üì± Ked·ª• n·ªçmba ekwent·ªã ha?\n\nüí° _Ma ·ªç b·ª• dee 'skip' ka any·ªã gaa n'ihu_",
    yo: "üì± Kini n·ªçmba foonu w·ªçn?\n\nüí° _Tabi k·ªç 'skip' lati t·∫πsiwaju_"
  },

  // Ask for address
  askAddress: {
    en: "üìç What's their business address?\n\nüí° _Or type 'skip' to continue_",
    pidgin: "üìç Wetin be their business address?\n\nüí° _Or type 'skip' make we continue_",
    ha: "üìç Ina adireshin kasuwancin su?\n\nüí° _Ko rubuta 'skip' don ci gaba_",
    ig: "üìç Ked·ª• adrees·ªã az·ª•mah·ªãa ha?\n\nüí° _Ma ·ªç b·ª• dee 'skip' ka any·ªã gaa n'ihu_",
    yo: "üìç Ibo ni adir·∫πsi i·π£owo w·ªçn wa?\n\nüí° _Tabi k·ªç 'skip' lati t·∫πsiwaju_"
  },

  // Ask for Tax ID
  askTaxId: {
    en: "üÜî What's their Tax ID (TIN)?\n\nüí° _Or type 'skip' if you don't have it_",
    pidgin: "üÜî Wetin be their Tax ID number (TIN)?\n\nüí° _Or type 'skip' if you no get am_",
    ha: "üÜî Menene lambar haraji nsu (TIN)?\n\nüí° _Ko rubuta 'skip' idan ba ku da shi_",
    ig: "üÜî Ked·ª• n·ªçmba ·ª•t·ª• isi ha (TIN)?\n\nüí° _Ma ·ªç b·ª• dee 'skip' ma ·ªç b·ª•r·ª• na ·ªã nwegh·ªã ya_",
    yo: "üÜî Kini n·ªçmba owo-ori w·ªçn (TIN)?\n\nüí° _Tabi k·ªç 'skip' ti o ko ni i_"
  },

  // Ask for RC Number
  askRcNumber: {
    en: "üè¢ What's their CAC/RC Number?\n\nüí° _Or type 'skip' if you don't have it_",
    pidgin: "üè¢ Wetin be their CAC/RC number?\n\nüí° _Or type 'skip' if you no get am_",
    ha: "üè¢ Menene lambar CAC/RC nsu?\n\nüí° _Ko rubuta 'skip' idan ba ku da shi_",
    ig: "üè¢ Ked·ª• n·ªçmba CAC/RC ha?\n\nüí° _Ma ·ªç b·ª• dee 'skip' ma ·ªç b·ª•r·ª• na ·ªã nwegh·ªã ya_",
    yo: "üè¢ Kini n·ªçmba CAC/RC w·ªçn?\n\nüí° _Tabi k·ªç 'skip' ti o ko ni i_"
  },

  // Client added successfully
  clientAdded: {
    en: (name: string) => `‚úÖ Client "${name}" added successfully!\n\nNow, let's add the items for this invoice.`,
    pidgin: (name: string) => `‚úÖ I don add "${name}" as client finish!\n\nNow, make we add the things wey dey for this invoice.`,
    ha: (name: string) => `‚úÖ An ∆ôara "${name}" cikin nasara!\n\nYanzu, bari mu ∆ôara abubuwan wannan invoice.`,
    ig: (name: string) => `‚úÖ Etinyela "${name}" nke ·ªçma!\n\nUgbu a, ka any·ªã tinye ihe nd·ªã d·ªã na invoice a.`,
    yo: (name: string) => `‚úÖ A ti fi "${name}" kun ni ifiji≈°·∫π!\n\nBayi, j·∫π ka fi aw·ªçn nkan fun invoice yii kun.`
  },

  // Ask for invoice items
  askItems: {
    en: "üì¶ What items or services are on this invoice?\n\nüí° *Example:*\n\"50 bags of cement at 6000 naira each\"\n\"Transport from Lagos to Abuja, 250000\"",
    pidgin: "üì¶ Wetin be the things wey dey for this invoice?\n\nüí° *Example:*\n\"50 bags cement at 6000 naira each\"\n\"Transport from Lagos go Abuja, 250000\"",
    ha: "üì¶ Menene abubuwan da ke cikin wannan invoice?\n\nüí° *Misali:*\n\"Buhuna siminti 50 a naira 6000 kowanne\"\n\"Sufuri daga Lagos zuwa Abuja, 250000\"",
    ig: "üì¶ G·ªãn·ªã b·ª• ihe nd·ªã d·ªã na invoice a?\n\nüí° *·ªåm·ª•maat·ª•:*\n\"Akpa simenti 50 na naira 6000 nke ·ªç b·ª•la\"\n\"Njem site na Lagos gaa Abuja, 250000\"",
    yo: "üì¶ Kini aw·ªçn nkan tabi i·π£·∫π ti o wa lori invoice yii?\n\nüí° *Ap·∫π·∫πr·∫π:*\n\"Apo simenti 50 ni naira 6000 k·ªç·ªçkan\"\n\"Gbigbe lati Lagos si Abuja, 250000\""
  },

  // Item added confirmation
  itemAdded: {
    en: (count: number) => `‚úÖ Item added!\n\nüì¶ Current items: ${count}\n\n*Add another or type "done" to continue*`,
    pidgin: (count: number) => `‚úÖ I don add the item!\n\nüì¶ Items wey we get now: ${count}\n\n*Add another one or type "done" make we continue*`,
    ha: (count: number) => `‚úÖ An ∆ôara abu!\n\nüì¶ Abubuwan yanzu: ${count}\n\n*∆òara wani ko rubuta "done" don ci gaba*`,
    ig: (count: number) => `‚úÖ Etinyela ihe!\n\nüì¶ Ihe nd·ªã d·ªã ugbu a: ${count}\n\n*Tinye ·ªçz·ªç ma ·ªç b·ª• dee "done" ka any·ªã gaa n'ihu*`,
    yo: (count: number) => `‚úÖ A ti fi nkan kun!\n\nüì¶ Aw·ªçn nkan l·ªçw·ªçl·ªçw·ªç: ${count}\n\n*Fi ·ªçkan si i tabi k·ªç "done" lati t·∫πsiwaju*`
  },

  // Confirm invoice
  confirmInvoice: {
    en: "‚úÖ *Confirm this invoice?*\n\nYes - Create it\nPreview - See how it looks\nEdit - Make changes\nCancel - Start over",
    pidgin: "‚úÖ *You sure say na this invoice you wan create?*\n\nYes - Create am\nPreview - See how e go look\nEdit - Change am\nCancel - Start again",
    ha: "‚úÖ *Tabbatar da wannan invoice?*\n\nYes - ∆òir∆ôira shi\nPreview - Duba yadda zai yi\nEdit - Yi canje-canje\nCancel - Fara daga farko",
    ig: "‚úÖ *Kwenye invoice a?*\n\nYes - Mep·ª•ta ya\nPreview - Lee ka ·ªç ga-ad·ªã\nEdit - Gbanwee ya\nCancel - Malite ·ªçz·ªç",
    yo: "‚úÖ *J·∫πrisi invoice yii?*\n\nYes - ·π¢e e\nPreview - Wo bi o ·π£e riran\nEdit - ·π¢e ayipada\nCancel - B·∫πr·∫π l·∫π·∫πkansi"
  }
};

/**
 * Get response in user's language
 */
export function getResponse(
  key: keyof typeof responses,
  language: Language,
  ...args: string[]
): string {
  const response = responses[key][language] as any;

  if (typeof response === 'function') {
    return response(...args);
  }

  return response as string;
}
